name: Build

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Set up golang, nodejs, uv, GTK3, keybinder-3.0
        run: sudo add-apt-repository ppa:longsleep/golang-backports && sudo apt update && sudo apt install -y golang-go nodejs npm libgtk-3-dev build-essential 
         && sudo apt-get update 
         && sudo apt-get install -y keybinder-3.0  xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxtst-dev libayatana-appindicator3-dev 
         && sudo apt-get install -y xvfb tigervnc-standalone-server
         && npm install -g pnpm && curl -LsSf https://astral.sh/uv/install.sh | sh
      - uses: actions/checkout@v3
      - name: run
        run: make test-xvfb

  build:
    name: Build ${{ matrix.os }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          # - os: macOS
          #   arch: ARM64
          #   runner: [ self-hosted, macOS, ARM64 ]
          #   asset_path: ./release/wox-mac-arm64.dmg
          #   asset_name: wox-mac-arm64.dmg
          #   content_type: application/x-elf
          #   needs_keychain: true
          # - os: macOS
          #   arch: AMD64
          #   runner: [ self-hosted, macOS, X64 ]
          #   asset_path: ./release/wox-mac-amd64.dmg
          #   asset_name: wox-mac-amd64.dmg
          #   content_type: application/x-elf
          #   needs_keychain: true
          - os: Windows
            arch: AMD64
            runner: windows-latest
            asset_path: ./release/wox-windows-amd64.exe
            asset_name: wox-windows-amd64.exe
            content_type: application/x-msdownload
          # - os: Linux
          #   arch: AMD64
          #   runner: [ self-hosted, Linux ]
          #   asset_path: ./release/wox-linux-amd64
          #   asset_name: wox-linux-amd64
          #   content_type: application/x-msdownload
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Set up uv
        run: powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
      - name: Set up pnpm
        run: npm install -g pnpm
      - uses: actions/checkout@v3
      - name: Build
        run: make build
        env:
          KEYCHAINPWD: ${{ matrix.needs_keychain && secrets.KEYCHAINPWD || '' }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_path }}
          retention-days: 3
      # - name: Deploy nightly release
      #   uses: WebFreak001/deploy-nightly@v3.0.0
      #   with:
      #     upload_url: https://uploads.github.com/repos/Wox-launcher/Wox/releases/127182165/assets{?name,label}
      #     release_id: 127182165
      #     asset_path: ${{ matrix.asset_path }}
      #     asset_name: ${{ matrix.asset_name }}
      #     asset_content_type: ${{ matrix.content_type }}
      #     max_releases: 1
